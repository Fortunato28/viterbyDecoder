#ifndef VITERBY_H
#define VITERBY_H

//******************************Удалить*******************************************
#define S 64
#define N 2
//*******************************Макросы******************************************
/**
 * @brief максимальная глубина поиска предположительно верной последовательности
 */
#define DEPTH 10
//*****************************Переменные*****************************************
/**
 */
//*****************************Структуры******************************************

/**
 * @brief структура sPath описывает путь от текущего узла до узла, в котором  схо-
 *        дятся другие пути.
 * Члены структуры:
 *  metric      - метрика Хэмминга текущего пути
 *  nodeSize    - количество записанных вершин
 *  currentNode - перечень текущих вершин
 */
typedef struct
{
    unsigned int metric;
    unsigned int nodeSize;
    unsigned int currentNode[S];
}sPath;

/**
 * @brief структура sTree описывает дерево вероятных путей
 * Члены структуры:
 *  data        - значение посещенного узла
 *  metric      - метрика Хэмминга для текущего узла
 *  codeIndex   - индекс массива последовательностей, при котором произошло ветвление дерева путей
 *  left        - указатель на левое поддерево
 *  right       - указатель на правое поддерево
 *  parent      - указатель на родительский узел
 */
typedef struct
{
    unsigned int data;
    unsigned int metric;
    unsigned int codeIndex;
    struct sTree *left;
    struct sTree *right;
    struct sTree *parent;
} sTree;

//******************************Функции*******************************************
/**
 * @brief функция запускает декодирование слова по алгоритму Витерби
 * @param
 *  coded - закодированная информация
 *  lenCoded - количество переданной информации (битах)
 *  decoded - декодированные данные
 *  lenDecoded - размер выходных декодированных данных
 */
void getDecode(void *coded, size_t lenCoded,
               void *decoded, size_t lenDecoded);

/**
 * @brief функция, очищающая массив вероятных путей
 * @param
 *  sPath path[S] - массив верояётных путей
 *  pathSize - размер массива вероятныз путей
 */
void clearPath(sPath path[S], size_t pathSize);
#endif // VITERBY_H




























